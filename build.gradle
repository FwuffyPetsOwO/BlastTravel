plugins {
	id 'maven-publish'
	alias(libs.plugins.quilt.loom)
	id('fabric-loom') version('0.12.+')
	id('org.quiltmc.quilt-mappings-on-loom') version('4.2.0')
}

archivesBaseName = project.archives_base_name
version = project.version
group = project.maven_group

repositories {
	maven { url = "https://api.modrinth.com/maven" }
}

dependencies {
	minecraft libs.minecraft
	mappings loom.layered {
		addLayer quiltMappings.mappings("org.quiltmc:quilt-mappings:${libs.versions.quilt.mappings.get()}:v2")
	}

	modImplementation libs.quilted.fabric.api

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "maven.modrinth:jsonem:${project.jsonem_version}"
	include "maven.modrinth:jsonem:${project.jsonem_version}"
}

processResources {
	inputs.property "version", version

	filesMatching('fabric.mod.json') {
		expand "version": version
	}
}

loom {
	accessWidenerPath = file("src/main/resources/blasttravel.accesswidener")
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
		// No publishing set up
	}
}
